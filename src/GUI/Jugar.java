/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Jugador.Fichas;
import Usuario.TipoJuego;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author jomel
 */
public class Jugar extends javax.swing.JPanel {
    
    Individual individual;
    Grupal grupal;
    Menu menu;
    /**
     * Creates new form Jugar
     */
    public Jugar(Menu menu) {
        initComponents();
        this.menu = menu;
        AgregarPanel();
        txtUser.setText(Inicio.usuario.getNombre());
        Summary.setBackground(new java.awt.Color(51,51,51,200));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtUser = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Summary = new javax.swing.JTextArea();
        Container = new javax.swing.JPanel();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("JUGAR");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 48, -1, -1));

        txtUser.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        txtUser.setForeground(new java.awt.Color(0, 0, 0));
        txtUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtUser.setText("Nombre de Usuario");
        txtUser.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 128, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(51, 0, 0));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 159, 160, 7));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Usuario:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 102, -1, -1));

        jButton1.setBackground(new java.awt.Color(153, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("JUGAR");
        jButton1.setBorderPainted(false);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 160, 48));

        Summary.setEditable(false);
        Summary.setBackground(new java.awt.Color(51, 51, 51));
        Summary.setColumns(20);
        Summary.setForeground(new java.awt.Color(204, 204, 204));
        Summary.setRows(5);
        Summary.setText("\"Sequence\" es un juego de mesa en el que el objetivo principal es ser el primer \njugador en formar una secuencia de cinco fichas en el tablero. Cada jugador tiene\n una mano de cartas que representan las casillas en el tablero. Al jugar una carta, \nlos jugadores deben colocar una ficha en la casilla correspondiente. \nLos jugadores deben planificar cuidadosamente sus movimientos para bloquear \na sus oponentes y formar sus propias secuencias. Además de las cartas normales, \nhay cartas especiales que permiten acciones adicionales, como eliminar fichas de\n los oponentes o mover las propias fichas. El juego continúa hasta que un\n jugador logra formar una secuencia de cinco fichas consecutivas, ya sea en línea\n recta, diagonal o en forma de L. ¡Diviértete jugando a \"Sequence\" y \ndemuestra tu habilidad estratégica!");
        add(Summary, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, 181));

        Container.setBackground(new java.awt.Color(204, 204, 204));
        add(Container, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 510, 260));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(Inicio.usuario.getTipo() == TipoJuego.INDIVIDUAL){
            if(individual.Users.size() > 1){
                this.InicioJuego(individual.Users.toArray(new String[individual.Users.size()]));
            }else{
                JOptionPane.showMessageDialog(null, "ERROR: La cantidad de jugadores elegida no permite jugar.");
            }
        }else{
            if(grupal.diffTeams() && grupal.diffTokens()){
                
                InicioJuego(grupal.getTeams().toArray(new String[grupal.getTeams().size()]));
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Container;
    private javax.swing.JTextArea Summary;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel txtUser;
    // End of variables declaration//GEN-END:variables

    void AgregarPanel(){
        javax.swing.JPanel Panel;
        if(Inicio.usuario.getTipo() == TipoJuego.INDIVIDUAL){
            individual = new Individual();
            Panel = individual;
            
        }else{
            grupal = new Grupal();
            Panel = grupal;
        }
        
        Panel.setSize(450, 260);
        Panel.setLocation(0, 0);
        Container.removeAll();
        Container.add(Panel);
        Container.revalidate();
        Container.repaint();
    }
    
    void InicioJuego(String[] listado){
        String[] nombres = listado;
        Jugador.Jugador[] jugadores = new Jugador.Jugador[nombres.length];
        ArrayList<Jugador.Fichas> fichas = new ArrayList();
        fichas.add(Fichas.RED);
        fichas.add(Fichas.BLUE);
        fichas.add(Fichas.YELLOW);
        fichas.add(Fichas.GREEN);
        int mano = 0;
        switch(listado.length){
            case 2:
                mano = 7;
                break;
            case 3:
                mano = 6;
                break;
            case 4:
                mano = 7;
                break;
            case 6:
                mano = 7;
                break;
            case 8:
                 mano = 4;
                break;
        }
        for(int i =0; i< jugadores.length; i++){
            Usuario.Usuario usuario = Inicio.ManagerAcc.searchUser(nombres[i]);
            if(Inicio.usuario.getTipo() == TipoJuego.INDIVIDUAL){
                if(i != 0 && !fichas.contains(usuario.getColor())){
                usuario.setFicha(fichas.get(0));
                }
                fichas.remove(fichas.indexOf(usuario.getColor()));

                if(fichas.isEmpty()){
                    fichas.add(Fichas.RED);
                    fichas.add(Fichas.BLUE);
                    fichas.add(Fichas.YELLOW);
                    fichas.add(Fichas.GREEN);
                }
                }
                jugadores[i] = new Jugador.Jugador(mano,usuario);
        }
        
        Jugador.Cartas[] baraja = Jugador.Cartas.baraja();
        Juego.Juego inicio = new Juego.Juego(jugadores, baraja);
        inicio.setVisible(true);
        menu.dispose();
    }
}
